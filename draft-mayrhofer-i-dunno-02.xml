<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
 <!ENTITY rfc2119 PUBLIC ""
          "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY rfc7830 PUBLIC ""
          "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7830.xml">
<!ENTITY rfc791 PUBLIC ""
          "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.0791.xml">
<!ENTITY rfc1034 PUBLIC ""
          "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.1034.xml">
<!ENTITY rfc1123 PUBLIC ""
          "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.1123.xml">
<!ENTITY rfc1883 PUBLIC ""
          "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.1883.xml">
<!ENTITY rfc4291 PUBLIC ""
          "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4291.xml">
<!ENTITY rfc5894 PUBLIC ""
          "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5894.xml">
<!ENTITY rfc5952 PUBLIC ""
          "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5952.xml">
<!ENTITY rfc6916 PUBLIC ""
          "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6916.xml">
<!ENTITY rfc3629 PUBLIC ""
          "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3629.xml">
<!ENTITY rfc5513 PUBLIC ""
          "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5513.xml">
<!ENTITY rfc6919 PUBLIC ""
          "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6919.xml">
<!ENTITY rfc8369 PUBLIC ""
          "http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8369.xml">
]>

<rfc category="exp" docName="draft-mayrhofer-i-dunno-02"
  ipr="trust200902">
  <?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
  <?rfc toc="yes" ?>
  <?rfc symrefs="yes" ?>
  <?rfc sortrefs="yes"?>
  <?rfc iprnotified="no" ?>
  <?rfc strict="yes" ?>
  <front>
    <title abbrev="draft-mayrhofer-i-dunno">The Internationalized Deliberately Unreadable Network NOtation (I-DUNNO)</title>

    <author initials="A.M." surname="Mayrhofer"
      fullname="Alexander Mayrhofer">
      <organization>nic.at GmbH</organization> 
      <address>
<!--    <postal>
     <street>Karlsplatz 1/2/9</street>
     <city>Vienna</city>
     <code>1010</code>
     <country>Austria</country>
    </postal> -->
   <email>alexander.mayrhofer@nic.at</email>
	<uri>https://i-dunno.at/</uri>
   </address>
   </author>
    <author initials="J.M." surname="Hague"
      fullname="Jim Hague">
      <organization>Sinodun</organization>
      <address>
   <email>jim@sinodun.com</email>
	<uri>https://www.sinodun.com/</uri>
   </address>
   </author>
   <date year="2019"/>
   <area>Operations and Management Area</area>
    <!-- <workgroup></workgroup> -->
    <abstract>
      <t>
        Domain Names were designed for humans, IP addresses were not. But more than 30 years after the
        introduction of the DNS, an unruly minority of mankind persists in invading the realm of machine to machine
        communication by reading, writing, misspelling, memorizing, permuting and confusing IP addresses.
        This memo describes the Internationalized Deliberately Unreadable Network NOtation ("I-DUNNO"), a notation
        designed to replace current textual representations of IP addresses with something that is not only more
        concise but which will also discourage this small but obviously important subset of undesirable human activity.
      </t>
    </abstract>
  </front>
  <middle>
    <section title="Introduction">
      <t>
        In Section 2.3 of <xref target='RFC0791'/>, the original designers of the Internet Protocol carefully defined names and addresses as separate
        quantities. While they did not explicitly reserve names for human consumption and addresses for machine use, they did consider the matter indirectly
        in their philosophical communal statement: "A name indicates what we seek.". This clearly indicates
        that names rather than addresses should be of concern to humans.
      </t>

      <t>
        The specification of Domain Names in <xref target='RFC1034'/>, and indeed the continuing enormous effort put into the Domain Name System,
        reinforces the view that humans should use names, and leave worrying about addresses to the machines. RFC1034
        mentions "users" several times, and even includes the word "humans", even though it is positioned slightly unfortunately,
        though perfectly understandably, in a
        context of "annoying" and "can wreak havoc" (See Section 5.2.3). Nevertheless, this is another clear indication that Domain Names
        are made for human use, while IP addresses are for machine use.
      </t>

      <t>
        Given this, and a long error-strewn history of human attempts to utilise addresses directly, it is obviously desirable that humans
        should not meddle with IP addresses. For that reason, it appears quite logical
        that a human-readable (textual) representation of IP addresses was just very vaguely specified in Section 2.1 of <xref target='RFC1123'/>.
        Subsequently, a directed effort to further discourage human use by making IP addresses more confusing was introduced in
        <xref target='RFC1883'/>, and additional options for human puzzlement were offered in Section 2.2. of <xref target='RFC4291'/>.
        These noble early attempts to hamper efforts by humans to read, understand or even spell IP addressing schemes were unfortunately severely
        compromised in <xref target='RFC5952'/>. 
      </t>

      <t>
        In order to prevent further damage from human meddling with IP addresses, there is a clear urgent need for an address notation that replaces these "Legacy Notations", and
        efficiently discourages humans from reading, modifying or otherwise manipulating IP addresses.
        Research in this area long ago recognised the potential in ab^H^Hperusing the intricacies, inaccuracies and
        chaotic disorder of what humans are pleased to call a "Cultural Technique" (also known as "Script"), and with a certain
        inexorable inevitability has focused of late on the admirable confusion (and thus discouragement) potential of <xref target='UNICODE'/>
        as an address notation.
        In <xref target='confreq'/>, we introduce a framework of Confusion Levels as an aid to the evaluation of the effectiveness
        of any Unicode-based scheme in producing notation in a form designed to be resistant to ready comprehension or, heaven forfend,
        mutation of the address, and so effecting the desired confusion and discouragement.
      </t>

      <t>
        The authors welcome <xref target='RFC8369'/> as a major step in the right direction.
        We have, though some reservations about the scheme proposed therein:
	<list style='symbols'>
          <t>Our analysis of the proposed scheme indicates that, while impressively concise, it fails to attain no more than at best a Minimum Confusion Level in our classification.</t>
          <t>Humans, especially younger ones, are becoming skilled at handling emoji. Over time this will negatively impact the discouragement factor.</t>
          <t>The proposed scheme is specific to IPv6; if a solution to this problem is to be in any way timely, it must, as a matter of the highest priority, address IPv4. After all, even taking the regrettable effects of RFC5952 into account, IPv6 does at least remain inherently significantly more confusing and discouraging than IPv4.</t>
	</list>
        
        This document therefore specifies an alternative Unicode-based notation, the "Internationalized Deliberately Unreadable Network NOtation" (I-DUNNO).
        This notation addresses each of the concerns outlined above:
	<list style='symbols'>
          <t>I-DUNNO can be generate Minium, Satisfactory or Delightful levels of confusion.</t>
          <t>As well as emoji, it takes advantage of other areas of Unicode confusion.</t>
          <t>It can be used with IPv4 and IPv6 addresses.</t>
	</list>
        We concede that I-DUNNO notation is markedly less concise than that of RFC8369.
        However, by permitting multiple code points in the representation of a single address, I-DUNNO opens up the full
        spectrum of Unicode adjacent code point interaction. This is a significant factor in allowing I-DUNNO to achieve
        higher levels of Confusion. I-DUNNO also requires no change to the current size of Unicode code points, and so its
        chances of adoption and implementation are (slightly) higher.
      </t>
	<t>Note that the use of I-DUNNO in the reverse DNS system is currently out of scope. The occasional human-induced absence of the magical one-character sequence U+002E is believed to cause sufficient disorder there.</t>
        <t>Media Access Control (MAC) addresses are totally out of the question.</t>
	</section>
    <section anchor="terminology" title="Terminology">
      <t> The key words "MUST", "MUST NOT", "REQUIRED", "SHALL",
        "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", 
		"NOT RECOMMENDED", "MAY", and
        "OPTIONAL" in this document MAY be interpreted as described
        in <xref target="RFC2119"/>. </t>
  	  <t>Additional Terminology from <xref target='RFC6919'/> MIGHT apply.</t>
	 </section>
	 <section title='The Notation'>
           <t>
             I-DUNNO leverages <xref target='RFC3629'>UTF-8</xref> to obfuscate IP addresses for humans. UTF-8 uses sequences between 1 and 4
             octets to represent code points as follows:
           </t>
           <figure align="center" anchor="UTF8">
             <artwork>
   Char. number range  |        UTF-8 octet sequence          
      (hexadecimal)    |              (binary)                
   --------------------+--------------------------------------
   0000 0000-0000 007F | 0xxxxxxx 
   0000 0080-0000 07FF | 110xxxxx 10xxxxxx
   0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx
   0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
             </artwork>
           </figure>
<t>I-DUNNO uses that structure to convey addressing information as follows:</t>
           <section title='Forming I-DUNNO'>
             <t>
               In order to form an I-DUNNO based on the Legacy Notation of an IP address, the following steps are performed:
               <list style='numbers'>
                 <t>
                   The octets of the IP address are written as a bitstring in Network Byte order.
                 </t>
                 <t>
                   Working from left to right, the bitstring (32 bits for IPv4, 128 bits for IPv6) is used to generate a list of valid UTF-8 octet sequences.
                   To allocate a single UTF-8 sequence:
                   <list style='letters'>
                     <t>
                       Choose whether to generate a 1, 2, 3 or 4 octet UTF-8 sequence. The choice OUGHT TO be guided by the requirement to generate
                       a satisfactory <xref target='minconf'>Minimum Confusion Level</xref> (Not to be confused with the minimum
                       <xref target='satconf'>Satisfactory Confusion Level</xref>). Refer to the character number range in <xref target='UTF8'/> in
                       order to identify which octet sequence lengths are valid for a given bitstring. For example, a 2 octet UTF-8
                       sequence requires the next 11 bits to have a value in the range 0080-07ff.
                     </t>
                     <t>
                       Allocate bits from the bitstring to fill the vacant positions 'x' in the UTF-8 sequence (see <xref target="UTF8" />) from left to right.
                     </t>
                     <t>
                       1, 2, 3 and 4 octet UTF-8 sequences require 7, 11, 16 and 21 bits respectively from the bitstring. Since the number
                       of combinations of UTF-8 sequences accommodating exactly 32 or 128 bits is limited, in sequences where the number of bits
                       required does not exactly match the number of available bits, the final UTF-8 sequence MUST be padded with additional bits
                       once the available address bits are exhausted. The sequence may therefore require up to 20 bits of padding. The content
                       of the padding SHOULD be chosen to maximise the resulting Confusion Level.
                     </t>
                   </list>
                 </t>
                 <t>
                   Once the bits in the bitstring are exhausted, the conversion is complete. The I-DUNNO representation of the address consists of the
                   Unicode code points described by the list of generated UTF-8 sequences, and MAY now be presented to unsuspecting humans.
                 </t>
		 </list>
		 </t>
	   </section>
	   <section title='Deforming I-DUNNO' anchor='deform'>
	     <t>
               This section is intentionally omitted. The machines will know how to do it, and by definition humans SHOULD NOT attempt the process.
             </t>
	   </section>
	</section>
	<section title='I-DUNNO Confusion Level Requirements' anchor='confreq'>
             <t>A sequence of characters is considered I-DUNNO only when there's enough potential to confuse humans.</t>
             <t>Unallocated code points MUST be avoided. While they might appear to have great confusion power at the moment, there's a minor chance that a future
             allocation to a useful, legible character will reduce this capacity significantly. Worse, in the (unlikely, but not impossible - see Section 3.1.3 of RFC5894) event of a code point
             losing its IDNA2008 <xref target='RFC5894'/> DISALLOWED property, existing I-DUNNOs could be rendered less than minimally confusing, with disastrous consequences.</t>
		 <t>The following Confusion Levels are defined:</t>
        <section title='Minimum Confusion Level' anchor='minconf'>
             <t>As a minimum, a valid I-DUNNO MUST:
             <list style='symbols'>
                <t>Contain at least one UTF-8 octet sequence with a length greater than one octet.</t>
                <t>Contain at least one character which is DISALLOWED in IDNA2008. No code point left behind! Note that this allows machines to distinguish I-DUNNO from Internationalized Domain Name labels.</t>
             </list>
             I-DUNNOs on this level will at least puzzle most human users with knowledge of the Legacy Notation.
             </t>
        </section>
        <section title='Satisfactory Confusion Level' anchor='satconf'>
             <t>An I-DUNNO with Satisfactory Confusion Level MUST adhere to the Minimum Confusion Level, and additionally contain two of the following:
		<list style='symbols'>
                  <t>At least one non-printable character.</t>
		  <t>Characters from at least two different Scripts.</t>
		  <t>A character from the "Symbol" category.</t>
                </list>
             The Satisfactory Confusion Level will make many human-machine interfaces beep, blink, silently fail or any combination thereof. This is considered sufficient to discourage most humans from deforming I-DUNNO.</t>
        </section>
        <section title='Delightful Confusion Level' anchor='delconf'>
            <t>An I-DUNNO with Delightful Confusion Level MUST adhere to the Satisfactory Confusion Level, and additionally contain at least two of the following:
		<list style='symbols'>
                  <t>Characters from scripts with different directionalities.</t>
                  <t>Character classified as "Confusables".</t>
		  <t>One or more Emojis.</t>
	        </list>
    An I-DUNNO conforming to this level will cause almost all humans to U+1F926, with the exception of those subscribed to the idna-update mailing list.</t>
        <t>(We have also considered a further, higher, Confusion Level, tentatively entitled "BReak EXaminatIon or Twiddling" or "BREXIT" Level Confusion,
        but currently we have no idea how to go about actually implementing it.)</t>
	   </section>
        </section>
 	<section title='Example'>
           <t>An I-DUNNO based on the Legacy Notation IPv4 address "198.51.100.164" is formed and validated as follows: First, the Legacy Notation is written as a string of 32 bits in Network Byte Order:</t>
<figure>
  <artwork align='center'>
11000110001100110110010010100100
  </artwork>
</figure>
<t>Since I-DUNNO requires at least one UTF-8 octet sequence with a length greater than one octet, we allocate bits in the following form:</t>
<figure>
  <artwork align='center'>
  seq1  |   seq2  |   seq3  |   seq4 
--------+---------+---------+------------
1100011 | 0001100 | 1101100 | 10010100100
  </artwork>
</figure>
<t>This translates into the following code points:</t>
<figure>
  <artwork align='center'>
Bit seq.    | Char. number | Character Name
------------+--------------+----------------------
1100011     | U+0063       | LATIN SMALL LETTER C
0001100     | U+000C       | FORM FEED (FF)
1101100     | U+006C       | LATIN SMALL LETTER L
10010100100 | U+04A4       | CYRILLIC CAPITAL LIGATURE EN GHE
  </artwork>
</figure>
<t>
  The resulting string MUST be evaluated against the Confusion Level Requirements before I-DUNNO can be declared. Given the example above:
  <list style='symbols'>
    <t>There is at least one UTF-8 octet sequence with a length greater than 1 (U+04A4).</t>
    <t>There are two IDNA2008 DISALLOWED characters: U+000C (for good reason!) and U+04A4.</t>
    <t>There is one non-printable character (U+000C).</t>
    <t>There are characters from two different Scripts (Latin and Cyrillic).</t>
  </list>
  Therefore, the example above constitutes valid I-DUNNO with a Satisfactory Confusion Level. U+000C in particular has great
  potential in environments where I-DUNNOs would be sent to printers.
</t>
  </section>	   
	<section title='IANA Considerations'>
           <t>IANA is kindly requested to revoke all IPv4 and IPv6 address range allocations which do not allow for at least one I-DUNNO of Delightful Confusion Level. IPv4 prefixes are more likely to  be affected, hence this can easily be marketed as an effort to foster IPv6 deployment.</t> 
           <t>Furthermore, IANA is urged to expand the <xref target='RFC5513'>Internet TLA Registry</xref> to accomodate Seven Letter Acronyms (SLA) for obvious reasons, and register 'I-DUNNO'. For that purpose, "-" SHALL be declared a Letter.</t>
	</section>
	<section title="Security Considerations">
          <t>I-DUNNO is not a security algorithm. Quite the contrary, many humans are known to develop a strong feeling of insecurity when confronted with I-DUNNO.</t> 
          <t>In the tradition of many other RFCs, the evaluation of other security aspects of I-DUNNO is left as an exercise for the reader.</t>
	</section>
  </middle>
  <back>
    <references title="Normative References">
                &rfc2119;
		&rfc3629;
                &rfc5894;
		&rfc6919;
	</references>
	<references title="Informative References">
	  &rfc791;
	  &rfc1034;
	  &rfc1123;
	  &rfc1883;
	  &rfc4291;
	  &rfc5513;
	  &rfc5952;
          &rfc8369;
          <reference anchor='UNICODE' target='http://www.unicode.org/versions/latest'>
            <front>
              <title>The Unicode Standard</title>
              <author>
                <organization>The Unicode Consortium</organization>
              </author>
              <date/>
            </front>
          </reference>
	</references>
  </back>
</rfc>
